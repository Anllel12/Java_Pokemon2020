/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JPanel;

/**
 *
 * @author Angel Esquinas
 * 
 */
public class VentanaPokedex extends javax.swing.JFrame {

    BufferedImage buffer1=null;
    
    Image imagen1=null;
    
    int contador=0;
    
    Statement estado;
    ResultSet resultadoConsulta;
    Connection conexion;
    
    HashMap<String, Pokemon> listaPokemon=new HashMap();//estructura para guardar todo el contenido de la base de datos de golpe
    
    @Override
    public void paint (Graphics g){
        super.paint(g);
        Graphics2D g2=(Graphics2D) imagenPokemon.getGraphics();
        
        g2.drawImage(buffer1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), null);
    }
    
    /**
     * Creates new form VentanaPokedex
     */
    public VentanaPokedex() {
        
        initComponents();               
       
        try {
            imagen1=ImageIO.read(getClass().getResource("/imagenes/black-white.png"));
            } 
        catch (IOException ex) {
           System.out.println("No es capaz de leer la imagen");
        }
        
        buffer1=(BufferedImage) imagenPokemon.createImage(imagenPokemon.getWidth(), imagenPokemon.getHeight());
        
        Graphics2D g2=buffer1.createGraphics();
        
        pintaPokemon(30);      
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conexion = DriverManager.getConnection("jdbc:mysql://192.168.111.135/test", "root", "");
            estado = conexion.createStatement();
            resultadoConsulta=estado.executeQuery("select * from pokemon");
            while (resultadoConsulta.next()) {
                Pokemon p=new Pokemon();
                p.nombre=resultadoConsulta.getString("nombre");
                p.especie=resultadoConsulta.getString("especie");
                p.movimiento1=resultadoConsulta.getString("movimiento1");
                p.peso=resultadoConsulta.getString("peso");
                
                listaPokemon.put(resultadoConsulta.getString("id"), p);//a√±ado el pokemon al hashmap

            }
//recorremos el array del resultado uno a uno para ir cargasolo en el Hasmap
        }
        catch (Exception e){
            System.out.println(e.getMessage());
            System.out.println("hay un error");
        }
        
    }
    
    
    private void pintaPokemon(int pos){
        
        int fila=pos/31;
        int columna=pos%31;
        
        Graphics2D g2=(Graphics2D) buffer1.getGraphics();
        g2.setColor(Color.WHITE);
        g2.fillRect(0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight());//pinta el fondo del jpanel en negro
        g2.drawImage(imagen1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), columna*96, fila*96, columna*96+96, fila*96+96, null);
        
        repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagenPokemon = new javax.swing.JPanel();
        anterior = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        nombrePokemon = new javax.swing.JLabel();
        especie = new javax.swing.JButton();
        tipo = new javax.swing.JButton();
        habilidad = new javax.swing.JButton();
        habitat = new javax.swing.JButton();
        altura = new javax.swing.JButton();
        peso = new javax.swing.JButton();
        preEvolucion = new javax.swing.JButton();
        posEvolucion = new javax.swing.JButton();
        descripcion = new javax.swing.JButton();
        movimiento1 = new javax.swing.JButton();
        movimiento2 = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout imagenPokemonLayout = new javax.swing.GroupLayout(imagenPokemon);
        imagenPokemon.setLayout(imagenPokemonLayout);
        imagenPokemonLayout.setHorizontalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );
        imagenPokemonLayout.setVerticalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        getContentPane().add(imagenPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        anterior.setBorderPainted(false);
        anterior.setContentAreaFilled(false);
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        getContentPane().add(anterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 680, 30, 40));

        siguiente.setBorderPainted(false);
        siguiente.setContentAreaFilled(false);
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });
        getContentPane().add(siguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 680, 30, 40));

        nombrePokemon.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        nombrePokemon.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(nombrePokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 310, 390, 80));

        especie.setText("Especie");
        especie.setBorderPainted(false);
        especie.setContentAreaFilled(false);
        getContentPane().add(especie, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 420, 90, 50));

        tipo.setText("Tipo");
        tipo.setBorderPainted(false);
        tipo.setContentAreaFilled(false);
        getContentPane().add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 420, 80, 50));

        habilidad.setText("Habil");
        habilidad.setBorderPainted(false);
        habilidad.setContentAreaFilled(false);
        getContentPane().add(habilidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 420, 80, 50));

        habitat.setText("Habitat");
        habitat.setBorderPainted(false);
        habitat.setContentAreaFilled(false);
        getContentPane().add(habitat, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 420, 90, 50));

        altura.setText("Altura");
        altura.setBorderPainted(false);
        altura.setContentAreaFilled(false);
        getContentPane().add(altura, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 420, 80, 50));

        peso.setText("Peso");
        peso.setBorderPainted(false);
        peso.setContentAreaFilled(false);
        getContentPane().add(peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 80, 50));

        preEvolucion.setText("PreEvolucion");
        preEvolucion.setBorderPainted(false);
        preEvolucion.setContentAreaFilled(false);
        getContentPane().add(preEvolucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 480, 160, 50));

        posEvolucion.setText("PosEvolucion");
        posEvolucion.setBorderPainted(false);
        posEvolucion.setContentAreaFilled(false);
        getContentPane().add(posEvolucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 480, 160, 50));

        descripcion.setText("Descripcion");
        descripcion.setBorderPainted(false);
        descripcion.setContentAreaFilled(false);
        getContentPane().add(descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 710, 210, 50));

        movimiento1.setText("Movimiento 1");
        movimiento1.setBorderPainted(false);
        movimiento1.setContentAreaFilled(false);
        getContentPane().add(movimiento1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 570, 130, 50));

        movimiento2.setText("Movimiento 2");
        movimiento2.setBorderPainted(false);
        movimiento2.setContentAreaFilled(false);
        getContentPane().add(movimiento2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 570, 130, 50));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Pokedex.jpg"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        
        pintaPokemon(contador);       
        
        Pokemon p=listaPokemon.get(String.valueOf(contador+1));
        if(p!=null){
            nombrePokemon.setText(p.nombre);
        }
        else{
            nombrePokemon.setText("No hay datos");
        }
        
        contador++;
        if (contador>=649){
            contador=649;
        }
        
    }//GEN-LAST:event_siguienteActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        
        pintaPokemon(contador);
        
        Pokemon p=listaPokemon.get(String.valueOf(contador+1));
        if(p!=null){
            nombrePokemon.setText(p.nombre);
        }
        else{
            nombrePokemon.setText("No hay datos");
        }
        
        contador--;
        if (contador<=0){
            contador=0;
        }
    }//GEN-LAST:event_anteriorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton altura;
    private javax.swing.JButton anterior;
    private javax.swing.JButton descripcion;
    private javax.swing.JButton especie;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton habilidad;
    private javax.swing.JButton habitat;
    private javax.swing.JPanel imagenPokemon;
    private javax.swing.JButton movimiento1;
    private javax.swing.JButton movimiento2;
    private javax.swing.JLabel nombrePokemon;
    private javax.swing.JButton peso;
    private javax.swing.JButton posEvolucion;
    private javax.swing.JButton preEvolucion;
    private javax.swing.JButton siguiente;
    private javax.swing.JButton tipo;
    // End of variables declaration//GEN-END:variables
}
